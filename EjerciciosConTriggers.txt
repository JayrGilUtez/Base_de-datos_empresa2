CREATE TABLE EMPLEADO(
ESTADO_CIVIL VARCHAR(7),
Nombre VARCHAR(15) NOT NULL,
Apellido1 VARCHAR(15) NOT NULL,
Apellido2 VARCHAR(15) NOT NULL,
Dni CHAR(9) NOT NULL,
FechaNac DATE,
Direccion VARCHAR(30),
Sexo CHAR(1),
Sueldo int, 
SuperDni CHAR(9),
Dno INT NOT NULL
);

-- CREAMOS EL TRIGGER

CREATE OR REPLACE TRIGGER TR_SOLTEROS
BEFORE INSERT
ON EMPLEADO
FOR EACH ROW
BEGIN
    IF :NEW.ESTADO_CIVIL = 'Soltero' THEN
    INSERT INTO SOLTEROS(NOMBRE, DNI) 
    VALUES(:NEW.NOMBRE, :NEW.DNI);
    END IF;

    END TR_SOLTEROS;

-- INSERTAMOS 5 TUPLAS PARA COMPROBAR QUE EL TRIGGER FUNCIONA BIEN

INSERT INTO EMPLEADO (ESTADO_CIVIL, Nombre, Apellido1, Apellido2, Dni, FechaNac, Direccion, Sexo, Sueldo, SuperDni, Dno)
VALUES ('Soltero', 'Juan', 'Pérez', 'Gómez', '123456789', TO_DATE('1990-05-15', 'YYYY-MM-DD'), 'Calle Principal 123', 'M', 2500, '987654321', 1);

INSERT INTO EMPLEADO (ESTADO_CIVIL, Nombre, Apellido1, Apellido2, Dni, FechaNac, Direccion, Sexo, Sueldo, SuperDni, Dno)
VALUES ('Casado', 'María', 'López', 'García', '987654321', TO_DATE('1985-10-20', 'YYYY-MM-DD'), 'Avenida Central 456', 'F', 3000, NULL, 2);

INSERT INTO EMPLEADO (ESTADO_CIVIL, Nombre, Apellido1, Apellido2, Dni, FechaNac, Direccion, Sexo, Sueldo, SuperDni, Dno)
VALUES ('Soltero', 'Pedro', 'Rodríguez', 'Sánchez', '654321987', TO_DATE('1992-03-10', 'YYYY-MM-DD'), 'Plaza Mayor 789', 'M', 2000, '987654321', 1);

INSERT INTO EMPLEADO (ESTADO_CIVIL, Nombre, Apellido1, Apellido2, Dni, FechaNac, Direccion, Sexo, Sueldo, SuperDni, Dno)
VALUES ('Casado', 'Laura', 'González', 'Torres', '789654123', TO_DATE('1988-07-08', 'YYYY-MM-DD'), 'Avenida Principal 567', 'F', 2800, NULL, 3);

INSERT INTO EMPLEADO (ESTADO_CIVIL, Nombre, Apellido1, Apellido2, Dni, FechaNac, Direccion, Sexo, Sueldo, SuperDni, Dno)
VALUES ('Soltero', 'Ana', 'Martínez', 'Ramírez', '456123789', TO_DATE('1993-09-25', 'YYYY-MM-DD'), 'Calle Secundaria 234', 'F', 2200, '987654321', 2);



-- COMPROBAMOS EN LA TABLA DE SOLTEROS

SELECT * FROM SOLTEROS;


-- OTROS COMANDOS QUE UTILIZE

SELECT * FROM EMPLEADO;

DROP TRIGGER TR_SOLTEROS;

DELETE FROM EMPLEADO WHERE Dni = '123456789';
DELETE FROM EMPLEADO WHERE Dni = '987654321';
DELETE FROM EMPLEADO WHERE Dni = '654321987';
DELETE FROM EMPLEADO WHERE Dni = '789654123';
DELETE FROM EMPLEADO WHERE Dni = '456123789';




--2.-

ALTER TABLE CONTROL
ADD NOMBRE VARCHAR(20);

CREATE OR REPLACE TRIGGER TR_BORRO_UN_EMPLEADO
AFTER DELETE  ON EMPLEADO 
FOR EACH ROW 
BEGIN
    INSERT INTO CONTROL(NOMBRE, FECHA)
    VALUES (:OLD.NOMBRE, SYSDATE);
    END TR_BORRO_UN_EMPLEADO;

    SELECT FECHA, NOMBRE FROM CONTROL;

-- CREAMOS EL TRIGGER PARA CONVERTIR LOS NUEVOS DATOS A MAYUSCULAS
CREATE OR REPLACE TRIGGER TR_CONVERTIR_A_MAYUSCULAS
BEFORE INSERT ON EMPLEADO
FOR EACH ROW
BEGIN
    :NEW.NOMBRE := UPPER(:NEW.NOMBRE);
    :NEW.APELLIDO1 := UPPER(:NEW.APELLIDO1);
    :NEW.APELLIDO2:= UPPER(:NEW.APELLIDO2);
    END TR_CONVERTIR_A_MAYUSCULAS;

--INSERTAMOS UNA TUPLA PARA COMPROBAR SI EL TRIGGER FUNCIONA BIEN

INSERT INTO EMPLEADO (ESTADO_CIVIL, Nombre, Apellido1, Apellido2, Dni, FechaNac, Direccion, Sexo, Sueldo, SuperDni, Dno)
VALUES ('Soltero', 'Pedro', 'Gómez', 'Martínez', '123456789', TO_DATE('1990-05-15', 'YYYY-MM-DD'), 'Calle Principal 123', 'M', 2500, NULL, 1);

-- COMOPROBAMOS EN LA TABLA

SELECT * FROM EMPLEADO;



-- PRIMERO AGREGAMOS LA COLUMNA CORREO_ELECTRONICO


ALTER TABLE EMPLEADO 
ADD CORREO_ELECTRONICO VARCHAR(30);

-- TRIGGER PARA GENERAR UN CORREO ELETRINICO

CREATE OR REPLACE TRIGGER TR_EMAIL
BEFORE INSERT ON EMPLEADO
FOR EACH ROW
BEGIN
    :NEW.CORREO_ELECTRONICO := LOWER(:NEW.NOMBRE || '.' || :NEW.APELLIDO1 || '@utez.edu.mx');
END TR_EMAIL;

--INSERTAMOS UNA TUPLA PARA COMPROBAR SI EL TRIGGER FUNCIONA BIEN

INSERT INTO EMPLEADO (ESTADO_CIVIL, Nombre, Apellido1, Apellido2, Dni, FechaNac, Direccion, Sexo, Sueldo, SuperDni, Dno)
VALUES ('Casado', 'Ana', 'López', 'García', '987654321', TO_DATE('1985-10-20', 'YYYY-MM-DD'), 'Avenida Central 456', 'F', 3000, NULL, 2);

-- COMOPROBAMOS EN LA TABLA

SELECT * FROM EMPLEADO;

-- QUE IMPIDA QUE EL REPRESENTANTE SUPERVISE A MAS DE 4 EMPLEADOS INCLUYENDOSE A EL

CREATE OR REPLACE TRIGGER TR_SUPERVISOR
BEFORE INSERT ON EMPLEADO
FOR EACH ROW
DECLARE SUPERVISA
BEGIN
    SELECT COUNT(*) INTO SUPERVISA FROM EMPLEADO
    WHERE SUPERDNI = :NEW.SUPERDNI;
    IF SUPERVISA >= 4
    THEN RAISE_APPLICATION_ERROR
    (-20600, :NEW.SUPERDNI || 'NO SE PUEDE SUPERVISAR A MAS DE 4 EMPLEADOS INCLUYENDO AL SUPERVISOR');
    END IF;
    END TR_SUPERVISOR;

-- CREAR UN TRIGGER QUE IMIDA QUE SE LE AUMENTE EL SUELDO A UN EMPLEADO EN MAS DEL 2O%


IF :NEW.SUELDO > :OLD.SUELDO*1.2 
THEN RAISE_APPLICATION_ERROR
END IF;

CREATE OR REPLACE TRIGGER TR_SUELDO
BEFORE UPDATE OF SUELDO ON EMPLEADO
FOR EACH ROW
BEGIN
    IF :NEW.SUELDO > :OLD.SUELDO * 1.2 THEN
    RAISE_APPLICATION_ERROR (-20600, :NEW.SUELDO || 'NO SE PUEDE AUMENTAR EL SUELDO A UN EMPLEADO EN MAS DEL 2O%');
    END IF;
    END TR_SUELDO;


UPDATE EMPLEADO SET SUELDO = 100000 
WHERE DNI = '123456789';

SELECT * FROM EMPLEADO;